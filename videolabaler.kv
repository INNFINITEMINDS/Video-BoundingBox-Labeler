#:import DrawableVideoPlayer widgets.DrawableVideoPlayer
#:import ScreenControlPanel widgets.Panels.RightPanel.ScreenControlPanel
#:import BottomControlPanel widgets.Panels.BottomPanel
#:import DrawableVideo widgets.Video

<VideoLabelerScreen>:
    orientation:'vertical'
    BoxLayout:
        size_hint: (1,.9)
        DrawableVideoPlayer:
            id: videoWidget
            labelsColor: root.labelsColor
            size_hint: (.7,1)
            add_bb: root.add_bb

        ScreenControlPanel:
            size_hint: (.3,1)
            id: rightControlPanel

            add_label: root.add_label
            delete_label: root.delete_label
            assign_label: root.assign_label
            save_screen:  videoWidget.save_screen
            clear_screen: root.delete_all_bbs
            delete_bb: root.delete_bb
            isVideoLoaded: videoWidget.isVideoLoaded


<DrawableVideoPlayer>
    orientation:'vertical'
    DrawableVideo:
        id: videoplayer
        source: root.videoSource
        size_hint: (1,.9)
        state: 'stop'
        video_loaded: root.video_loaded
        on_duration: root.video_duration_changed(args[1])
        labelsColor: root.labelsColor
        add_bb: root.add_bb
    Slider:
        id: videoSlider
        size_hint: (1,.1)
        min: 0
        disabled: videoplayer.loaded == False
        on_touch_up: root.video_slider_released(args[1], self.value_normalized)
        on_touch_down: root.video_slider_pressed(args[1])
        sensitivity: 'handle'
    BottomControlPanel:
        load_movie: root.load_movie
        play_pause_pressed: videoplayer.play_pause_pressed
        stop_pressed: videoplayer.stop_pressed
        video_state: videoplayer.state
        id: bottomControlPanel
        size_hint: (1,.1)

<DrawableVideo>

<BottomControlPanel>
    Button:
        size_hint: (.2,1)
        text:'Load Movie'
        on_release: root.load_movie()
    Button:
        size_hint: (.2,1)
        text:'Stop'
        on_release: root.stop_pressed()
    Button:
        id: playPauseButton
        size_hint: (.2,1)
        text:'Play'
        on_release: root.play_pause_pressed()

<ScreenControlPanel>
#    Button:
#        size_hint: (1,.1)
#        text:'Settings'
#        on_release: root.settings()
    Button:
        size_hint: (1,.1)
        text:'Save Screen'
        on_release: root.save_screen_clicked(self)
    BoxLayout:
        size_hint: (1, .1)
        orientation:'horizontal'
        TextInput:
            id: labeltextinput
            size_hint: (.7, 1)
        Button:
            size_hint: (.3, 1)
            text: 'Add Label'
            on_release: root.add_label(labeltextinput.text)
    Button:
        size_hint: (1, .1)
        text: 'Delete Label'
        on_release: root.delete_label_clicked(self)
    Button:
        orientation: 'rl-tb'
        size_hint: (1,.1)
        text:'Clear Screen'
        on_release: root.clear_screen()
    BoxLayout:
        id: bbsStackLayout
        orientation:'vertical'
        size_hint: (1,.5)

<bbEntryRightControlPanel>
    orientation:'horizontal'
    size_hint: (1,.1)
    Label:
        text: str(root.bb.id)
        halign: 'left'
        size: self.texture_size
        padding: (10,10)
        pos: root.pos
    Button:
        size_hint: (.2,1)
        text: 'Del\nBB'
        background_color: (1,0,0,1)
        background_normal : ''
        on_release: root.delete_bb(root.bb)
    Button:
        text: root.bbLabel
        on_release: root.assign_label_clicked(self)

<ConfirmBubble>
    text:'Not all BBs are assigned to a label, save anyway?'
    Button:
        text:'Yes'
        on_release: root.confirm(root, True)
    Button:
        text:'No'
        on_release: root.confirm(root, False)


<LoadDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            path: 'C:\\'
        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()
            Button:
                text: "Load"
                on_release: root.load_clicked(filechooser.path, filechooser.selection)

<YoBBWidget>
    canvas.before:
        Color:
            rgb: (self.bbColor[0], self.bbColor[1], self.bbColor[2])
        Line:
            points: self.linepoints
            width:3
            joint: 'round'
#        Ellipse:
#            pos: [self._centerX,self._centerY]

    Label:
        id: labelname
        text: '[size=24][color=' + root.bbColorHex + ']' +root.labelName + '[/color][/size]'
        markup:True
        halign: 'left'
        valign: 'bottom'
        size: self.texture_size
        padding: (10,10)
        pos: root.pos
    Label:
        id: labelid
        text: '[size=24][color=' + root.bbColorHex + ']' +root.labelId + '[/color][/size]'
        markup :True
        halign: 'left'
        valign: 'top'
        size: self.texture_size
        padding: (10,10)
        pos: (root.pos[0], root.pos[1]+root.height)


<CircleWidget>
    canvas:
        Color:
            rgb: 1, 1, 1
        Ellipse:
            pos: x, y
            size: 5, 5